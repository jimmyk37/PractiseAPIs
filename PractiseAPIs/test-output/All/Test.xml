<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="13" hostname="DESKTOP-H8LBSOE" failures="2" tests="37" name="Test" time="48.0" errors="0" timestamp="2024-11-05T11:10:55 IST">
  <testcase classname="sample.User.VerifyLoginTest" name="testEmptyRequest" time="4.732"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testIncorrectPassword" time="1.296"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testMissingEmail" time="1.262"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testNonexistentUser" time="1.351"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testVerifyLoginSuccess" time="1.261"/>
  <testcase classname="sample.User.CreateAccountTest" name="testCreateAccountSuccess" time="0.697">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;201&amp;gt; but was &amp;lt;200&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at sample.User.CreateAccountTest.testCreateAccountSuccess(CreateAccountTest.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- testCreateAccountSuccess -->
  <testcase classname="sample.User.CreateAccountTest" name="testExistingEmail" time="1.393"/>
  <testcase classname="sample.User.CreateAccountTest" name="testInvalidEmailFormat" time="1.221">
    <failure type="java.lang.AssertionError" message="expected [Invalid EMail] but found [Email already exists!]">
      <![CDATA[java.lang.AssertionError: expected [Invalid EMail] but found [Email already exists!]
at sample.User.CreateAccountTest.testInvalidEmailFormat(CreateAccountTest.java:111)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testInvalidEmailFormat -->
  <testcase classname="sample.User.CreateAccountTest" name="testMissingRequiredFields" time="1.172"/>
  <testcase classname="sample.Product.BrandsList" name="testGetAllBrandsListSuccess" time="1.545"/>
  <testcase classname="sample.Product.BrandsList" name="testInvalidEndpoint" time="1.197"/>
  <testcase classname="sample.Product.BrandsList" name="testUnsupportedMethod" time="1.258"/>
  <testcase classname="sample.Product.SearchProductTest" name="testContentType" time="0.7"/>
  <testcase classname="sample.Product.SearchProductTest" name="testInvalidProductName" time="0.725"/>
  <testcase classname="sample.Product.SearchProductTest" name="testMissingRequiredParameter" time="1.226"/>
  <testcase classname="sample.Product.SearchProductTest" name="testProductStructure" time="0.891"/>
  <testcase classname="sample.Product.SearchProductTest" name="testResponseTime" time="0.815"/>
  <testcase classname="sample.Product.SearchProductTest" name="testSearchProductSuccess" time="1.441"/>
  <testcase classname="sample.Product.SearchProductTest" name="testSpecialCharactersInProductName" time="1.123"/>
  <testcase classname="sample.Product.SearchProductTest" name="testSpecificProductDetails" time="1.37"/>
  <testcase classname="sample.Product.SearchProductTest" name="testUnsupportedMethod" time="1.196"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testIncorrectPassword" time="1.716"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testInvalidEmailFormat" time="1.104"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testMissingEmailParameter" time="0.667"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testMissingPasswordParameter" time="1.219"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testNonexistentEmail" time="1.272"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testInvalidEmailFormat" time="1.175"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testMissingEmailParameter" time="1.207"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testNonexistentEmail" time="1.107"/>
  <testcase classname="sample.Product.ProductsListTest" name="testContentType" time="1.272"/>
  <testcase classname="sample.Product.ProductsListTest" name="testFilterByCategory" time="1.261"/>
  <testcase classname="sample.Product.ProductsListTest" name="testGetAllProductsListSuccess" time="1.168"/>
  <testcase classname="sample.Product.ProductsListTest" name="testProductStructure" time="0.807"/>
  <testcase classname="sample.Product.ProductsListTest" name="testResponseContainsProducts" time="1.238"/>
  <testcase classname="sample.Product.ProductsListTest" name="testResponseTime" time="2.367"/>
  <testcase classname="sample.Product.ProductsListTest" name="testSpecificProductDetails" time="1.289"/>
  <testcase classname="sample.Product.ProductsListTest" name="testUnsupportedMethod" time="0.629"/>
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.Product.ProductsListTest" name="testInvalidEndpoint" time="0.0">
    <ignored/>
  </testcase> <!-- testInvalidEndpoint -->
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.HelperClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
</testsuite> <!-- Test -->
